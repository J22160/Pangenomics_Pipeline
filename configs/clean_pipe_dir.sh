#!/bin/bash

# =============================================================================
#   Script: clean_pipe_directory.sh
# =============================================================================
#   Author: Jash Trivedi
#   Date: 12/19/2024
#   Project: DualRNASeq Pipeline
#
# Description:
# This script removes intermediate and output files generated by the 
# Pangenomics pipeline. It allows for selective cleaning of different stages
# of the pipeline, ensuring a clean working directory while preserving 
# necessary inputs and configurations.
#
# Usage:
# ./clean_pipe_directory.sh [options]
# Options:
#   -a, --all           Remove all outputs (including final results).
#   -i, --intermediate  Remove only intermediate files.
#   -q, --qc            Remove quality control files.
#   -f, --force         Force clean without confirmation.
#   -h, --help          Display this help message.
# =============================================================================

# Default behavior
CLEAN_INTERMEDIATE=false
CLEAN_QC=false
CLEAN_ALL=false
FORCE=false

# Display help message
function show_help {
    echo "Usage: ./clean_pipe_directory.sh [options]"
    echo "Options:"
    echo "  -a, --all           Remove all outputs (including final results)."
    echo "  -i, --intermediate  Remove only intermediate files."
    echo "  -q, --qc            Remove quality control files."
    echo "  -f, --force         Force clean without confirmation."
    echo "  -h, --help          Display this help message."
}

# Parse command-line arguments
while [[ "$#" -gt 0 ]]; do
    case $1 in
        -a|--all) CLEAN_ALL=true ;;
        -i|--intermediate) CLEAN_INTERMEDIATE=true ;;
        -q|--qc) CLEAN_QC=true ;;
        -f|--force) FORCE=true ;;
        -h|--help) show_help; exit 0 ;;
        *) echo "Unknown option: $1"; show_help; exit 1 ;;
    esac
    shift
done

# Confirm cleanup operation unless forced
function confirm_clean {
    if [ "$FORCE" = false ]; then
        read -p "Are you sure you want to proceed with the cleanup? (y/N): " confirm
        if [[ ! $confirm =~ ^[Yy]$ ]]; then
            echo "Cleanup canceled."
            exit 0
        fi
    fi
}

# Perform cleanup operations
function clean_directory {
    echo "Starting cleanup..."

    # Remove intermediate files
    if [ "$CLEAN_INTERMEDIATE" = true ] || [ "$CLEAN_ALL" = true ]; then
        echo "Removing intermediate files..."
        rm -rf output/clean_short_reads/
        rm -rf output/clean_long_reads/
        rm -rf output/salmon_mapping/
        rm -rf output/pangenome_analysis/intermediate/
    fi

    # Remove quality control files
    if [ "$CLEAN_QC" = true ] || [ "$CLEAN_ALL" = true ]; then
        echo "Removing quality control files..."
        rm -rf output/clean_short_reads_fastqc/
        rm -rf output/multiqc/
    fi

    # Remove all outputs
    if [ "$CLEAN_ALL" = true ]; then
        echo "Removing all pipeline outputs..."
        rm -rf output/hybrid_assembly/
        rm -rf output/annotation_prokka/
        rm -rf output/pangenome_analysis/
        rm -rf output/snp_analysis/
        rm -f output/sample_mapping/merge_salmon_counts_TPM.txt
    fi

    echo "Cleanup complete."
}

# Execute cleanup if any option is selected
if [ "$CLEAN_INTERMEDIATE" = false ] && [ "$CLEAN_QC" = false ] && [ "$CLEAN_ALL" = false ]; then
    echo "No cleanup option selected. Use -h or --help for usage information."
    exit 1
fi

# Confirm and clean
confirm_clean
clean_directory
